name: Release
permissions: {}

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      packages: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: release # Use the 'release' branch even if triggered manually

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version:
            8.0.x

      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.MAVEN_GPG_SECRET_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      # No special setup for Go.

      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - uses: actions/setup-python@v4
        with:
          python-version: 3.13
      - run: pip install build twine

      - run: ./zig/download.sh
      - run: ./zig/zig build scripts -- release --build --publish --sha=${{ github.sha }}
        env:
          NUGET_KEY: ${{ secrets.NUGET_KEY }}
          TIGERBEETLE_GO_PAT: ${{ secrets.TIGERBEETLE_GO_PAT }}
          TIGERBEETLE_DOCS_PAT: ${{ secrets.TIGERBEETLE_DOCS_PAT }}
          MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_SECRET_KEY_PASSWORD }}
          NODE_AUTH_TOKEN: ${{ secrets.TIGERBEETLE_NODE_PUBLISH_KEY }}
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  alert_failure:
    runs-on: ubuntu-latest
    needs: [release]
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    steps:
      - name: Alert if anything failed
        run: |
          export URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" && \
          curl -d "text=Release process for ${{ github.run_number }} failed! See ${URL} for more information." -d "channel=C04RWHT9EP5" -H "Authorization: Bearer ${{ secrets.SLACK_TOKEN }}" -X POST https://slack.com/api/chat.postMessage
